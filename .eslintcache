[{"/Users/vy/PhpstormProjects/berezka-web/src/components/Dashboard.js":"1","/Users/vy/PhpstormProjects/berezka-web/src/components/HeaderAccountBalance.js":"2","/Users/vy/PhpstormProjects/berezka-web/src/components/data/tokens.js":"3","/Users/vy/PhpstormProjects/berezka-web/src/components/data/admin.js":"4","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenPriceGraph.js":"5","/Users/vy/PhpstormProjects/berezka-web/src/components/AuditAbout.js":"6","/Users/vy/PhpstormProjects/berezka-web/src/components/Brands.js":"7","/Users/vy/PhpstormProjects/berezka-web/src/components/Header.js":"8","/Users/vy/PhpstormProjects/berezka-web/src/App.js":"9","/Users/vy/PhpstormProjects/berezka-web/src/components/Sidebar.js":"10","/Users/vy/PhpstormProjects/berezka-web/src/components/HeaderBalance.js":"11","/Users/vy/PhpstormProjects/berezka-web/src/components/Footer.js":"12","/Users/vy/PhpstormProjects/berezka-web/src/components/Account.js":"13","/Users/vy/PhpstormProjects/berezka-web/src/components/Audit.js":"14","/Users/vy/PhpstormProjects/berezka-web/src/components/TokenRequestController.js":"15","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenTableInfo.js":"16","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenAmount.js":"17","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/PortfolioPartsGraph.js":"18","/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTableRowDropdown.js":"19","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/AccountPortfolioProvider.js":"20","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/computeCost.js":"21","/Users/vy/PhpstormProjects/berezka-web/src/reportWebVitals.js":"22","/Users/vy/PhpstormProjects/berezka-web/src/components/SidebarActivation.js":"23","/Users/vy/PhpstormProjects/berezka-web/src/components/TokenRequest.js":"24","/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTable.js":"25","/Users/vy/PhpstormProjects/berezka-web/src/components/TokenDashboard.js":"26","/Users/vy/PhpstormProjects/berezka-web/src/components/TokenRequestStandalone.js":"27","/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTableRow.js":"28","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenPrice.js":"29","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/PortfolioParts.js":"30","/Users/vy/PhpstormProjects/berezka-web/src/components/Application.js":"31","/Users/vy/PhpstormProjects/berezka-web/src/components/Index.js":"32","/Users/vy/PhpstormProjects/berezka-web/src/components/CookiePolicy.js":"33","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/APY.js":"34","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/ERC20Provider.js":"35"},{"size":1433,"mtime":1609080066469,"results":"36","hashOfConfig":"37"},{"size":380,"mtime":1609080066469,"results":"38","hashOfConfig":"37"},{"size":2276,"mtime":1609080066472,"results":"39","hashOfConfig":"37"},{"size":315,"mtime":1609080066471,"results":"40","hashOfConfig":"37"},{"size":5439,"mtime":1609080066473,"results":"41","hashOfConfig":"37"},{"size":1910,"mtime":1609232345973,"results":"42","hashOfConfig":"37"},{"size":2193,"mtime":1609157348114,"results":"43","hashOfConfig":"37"},{"size":1553,"mtime":1609158228637,"results":"44","hashOfConfig":"37"},{"size":119,"mtime":1608567609000,"results":"45","hashOfConfig":"37"},{"size":963,"mtime":1609079474147,"results":"46","hashOfConfig":"37"},{"size":273,"mtime":1608567609000,"results":"47","hashOfConfig":"37"},{"size":1112,"mtime":1608567609000,"results":"48","hashOfConfig":"37"},{"size":1625,"mtime":1609080066468,"results":"49","hashOfConfig":"37"},{"size":290,"mtime":1608567609000,"results":"50","hashOfConfig":"37"},{"size":5705,"mtime":1608567609000,"results":"51","hashOfConfig":"37"},{"size":3403,"mtime":1609080066473,"results":"52","hashOfConfig":"37"},{"size":770,"mtime":1608567609000,"results":"53","hashOfConfig":"37"},{"size":7304,"mtime":1608567609000,"results":"54","hashOfConfig":"37"},{"size":1861,"mtime":1608567609000,"results":"55","hashOfConfig":"37"},{"size":4112,"mtime":1608567609000,"results":"56","hashOfConfig":"37"},{"size":1467,"mtime":1608567609000,"results":"57","hashOfConfig":"37"},{"size":364,"mtime":1608567609000,"results":"58","hashOfConfig":"37"},{"size":280,"mtime":1608567609000,"results":"59","hashOfConfig":"37"},{"size":1312,"mtime":1608567609000,"results":"60","hashOfConfig":"37"},{"size":596,"mtime":1608567609000,"results":"61","hashOfConfig":"37"},{"size":4688,"mtime":1609080066471,"results":"62","hashOfConfig":"37"},{"size":2790,"mtime":1608567609000,"results":"63","hashOfConfig":"37"},{"size":1307,"mtime":1609079474139,"results":"64","hashOfConfig":"37"},{"size":1063,"mtime":1608567609000,"results":"65","hashOfConfig":"37"},{"size":5073,"mtime":1608567609000,"results":"66","hashOfConfig":"37"},{"size":1207,"mtime":1608567609000,"results":"67","hashOfConfig":"37"},{"size":510,"mtime":1608567609000,"results":"68","hashOfConfig":"37"},{"size":8723,"mtime":1608567609000,"results":"69","hashOfConfig":"37"},{"size":1175,"mtime":1608567609000,"results":"70","hashOfConfig":"37"},{"size":1330,"mtime":1608567609000,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"b98226",{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"85"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"85"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vy/PhpstormProjects/berezka-web/src/components/Dashboard.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/HeaderAccountBalance.js",[],["150","151"],"/Users/vy/PhpstormProjects/berezka-web/src/components/data/tokens.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/data/admin.js",[],["152","153"],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenPriceGraph.js",["154"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { apiNameByAddress } from \"../data/tokens\";\nimport { mergeByDayID } from \"./merger\";\nimport { useQuery, gql } from \"@apollo/react-hooks\";\nimport { round } from \"./round\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst GET_LAST_PRICE = gql`\n  query Get($tokenAddress: String) {\n    dayHistoricalDatas(\n      orderBy: dayId\n      orderDirection: desc\n      where: { token: $tokenAddress }\n    ) {\n      id\n      date\n      dayId\n      price\n      token\n      totalPrice\n    }\n  }\n`;\n\nconst renderIncrease = (options) => {\n  const { event, chart, data } = options;\n  let filteredData = data;\n  if (event) {\n    const { max, min } = event;\n    filteredData = data.filter((point) => {\n      const [date] = point;\n      return date >= min && date <= max;\n    });\n  }\n\n  const len = filteredData.length - 1;\n  const rangeStart = filteredData[0][1];\n  const rangeEnd = filteredData[len][1];\n  const increaseFloat = (rangeEnd * 100) / rangeStart - 100;\n  const increaseRaw = increaseFloat.toFixed(2);\n  const increase = +increaseRaw === increaseFloat ? increaseFloat : increaseRaw;\n  const subtitle = `Increase: ${increase}%`;\n  const subtitleOptions = {\n    text: subtitle,\n  };\n  chart.setTitle(null, subtitleOptions);\n};\n\nconst TokenPriceGraph = (props) => {\n  const { tokenAddress, isAdmin } = props;\n  const precision = isAdmin ? 6 : 3;\n\n  const { loading, data } = useQuery(GET_LAST_PRICE, {\n    variables: {\n      tokenAddress,\n    },\n  });\n\n  const [historicalData, setHistoricalData] = useState();\n\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const fn = async () => {\n      if (!tokenAddress) {\n        setHistoricalData(null);\n      } else {\n        const apiName = apiNameByAddress(tokenAddress);\n        if (!apiName) {\n          setHistoricalData([]);\n        } else {\n          const response = await fetch(\n            `/storage/charts/${apiNameByAddress(tokenAddress)}/common.json`\n          ).then((res) => res.json());\n          const adjusted = response.map((data) => {\n            return {\n              date: Math.floor(data[0] / 1000),\n              dayId: Math.floor(data[0] / 1000 / 86400),\n              price: \"\" + round(data[1] * 10 ** 6, precision),\n              token: tokenAddress.toLowerCase(),\n              totalPrice: round(\n                Number.parseFloat(data[3]) * 10 ** 6 * 10 ** 18,\n                3\n              ),\n            };\n          });\n          setHistoricalData(adjusted);\n        }\n      }\n    };\n    fn();\n  }, [tokenAddress]);\n\n  if (loading || !historicalData) {\n    return <>Loading...</>;\n  }\n\n  const graphOnly = mergeByDayID([], [...data.dayHistoricalDatas]);\n  const excelOnly = mergeByDayID([...historicalData], []);\n  const merged = mergeByDayID(historicalData, data.dayHistoricalDatas);\n\n  const chartData = merged\n    .map((it) => {\n      return [\n        Number.parseInt(it.dayId) * 1000 * 86400,\n        round(Number.parseFloat(it.price / 10 ** 6), precision),\n      ];\n    })\n    .reverse();\n\n  var series = [\n    {\n      color: \"#623a6c\",\n      name: \"Token Price\",\n      data: chartData,\n    },\n  ];\n\n  if (isAdmin) {\n    const chartDataGraphOnly = graphOnly\n      .map((it) => {\n        return [\n          Number.parseInt(it.dayId) * 1000 * 86400,\n          round(Number.parseFloat(it.price / 10 ** 6), precision),\n        ];\n      })\n      .reverse();\n\n    const chartDataExcelOnly = excelOnly\n      .map((it) => {\n        return [\n          Number.parseInt(it.dayId) * 1000 * 86400,\n          round(Number.parseFloat(it.price / 10 ** 6), precision),\n        ];\n      })\n      .reverse();\n\n    series = [\n      ...series,\n      {\n        color: \"#f54242\",\n        name: \"Token Price (Graph)\",\n        data: chartDataGraphOnly,\n      },\n      {\n        color: \"#f542e0\",\n        name: \"Token Price (Excel)\",\n        data: chartDataExcelOnly,\n      },\n    ];\n  }\n\n  const titleOptions = {\n    // text: title\n    text: null,\n  };\n\n  const config = {\n    exporting: {\n      enabled: false,\n    },\n    navigator: {\n      enabled: false,\n    },\n    xAxis: {\n      events: {\n        setExtremes(event) {\n          renderIncrease({\n            event,\n            chart: chartRef.current.chart,\n            data: chartData,\n          });\n        },\n      },\n    },\n    title: titleOptions,\n    subtitle: {\n      text: \"\",\n    },\n    rangeSelector: {\n      buttons: [\n        {\n          type: \"hour\",\n          count: 1,\n          text: \"1h\",\n        },\n        {\n          type: \"day\",\n          count: 1,\n          text: \"1d\",\n        },\n        {\n          type: \"week\",\n          count: 1,\n          text: \"1w\",\n        },\n        {\n          type: \"month\",\n          count: 1,\n          text: \"1m\",\n        },\n        {\n          type: \"all\",\n          count: 1,\n          text: \"All\",\n        },\n      ],\n      selected: 4,\n      inputEnabled: true,\n    },\n    yAxis: {\n      title: {\n        text: \"Price, USD\",\n      },\n      opposite: false,\n    },\n\n    series,\n  };\n\n  setTimeout(() => {\n    renderIncrease({\n      chart: chartRef.current.chart,\n      data: chartData,\n    });\n  });\n\n  return (\n    <>\n      <HighchartsReact\n        ref={chartRef}\n        highcharts={Highcharts}\n        constructorType={\"stockChart\"}\n        options={config}\n        immutable={true}\n      />\n    </>\n  );\n};\n\nexport default TokenPriceGraph;\n",["155","156"],"/Users/vy/PhpstormProjects/berezka-web/src/components/AuditAbout.js",["157"],"import React from \"react\";\n\nclass AuditAbout extends React.Component {\n  render() {\n    return (\n      <div className=\"section _with-aside _mb\">\n        <div></div>\n        <div className=\"information\">\n          <div className=\"information__item\">\n            <div className=\"information__title\">\n              Berezka DAO is a decentralized autonomous organization based on\n              Aragon.\n            </div>\n            <div className=\"information__title\">\n              Aragon Smart Contract Audits\n            </div>\n            <div className=\"information__text\">\n              A number of audits have been performed on the existing smart\n              contract codebase by the White Hat Group, Consensys Diligence,\n              Authio, and others. Ongoing smart contract changes will continue\n              being audited at the Aragon Association's discretion.\n            </div>\n            <div className=\"information__text\">\n              Details:&#32;&nbsp;\n              <a className=\"link-color\" href=\"\">\n                wiki.aragon.org/association/security/\n              </a>\n            </div>\n          </div>\n          <div className=\"information__item\">\n            <div className=\"information__title\">White Hat Group</div>\n            <div className=\"information__title\">Consensys Diligence</div>\n            <div className=\"information__text\">\n              As one of the most experienced teams in the space, ConsenSys\n              Diligence is at the cutting edge of offensive cryptography,\n              blockchain technology, and cryptoeconomic incentive analysis.\n            </div>\n            <div className=\"information__title\">Authio</div>\n            <div className=\"information__text\">\n              Authio is a smart contract auditing and security consulting firm.\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AuditAbout;\n","/Users/vy/PhpstormProjects/berezka-web/src/components/Brands.js",["158","159","160","161","162","163","164","165","166","167","168","169"],"/Users/vy/PhpstormProjects/berezka-web/src/components/Header.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/App.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/Sidebar.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/HeaderBalance.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/Footer.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/Account.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/Audit.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/TokenRequestController.js",["170"],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenTableInfo.js",["171","172"],"import React, { useState, useCallback, useRef } from \"react\";\nimport TokenTableInfoRow from \"./TokenTableInfoRow\";\n\nconst TokenTableInfo = (props) => {\n  const {\n    tokens,\n    walletAddress,\n    web3,\n    setGlobalTotal,\n    profitAccumulator,\n  } = props;\n\n  const [total, setTotal] = useState(0);\n  const [totalProfit, setTotalProfit] = useState(0);\n  const [totalInvested, setTotalInvested] = useState(0);\n\n  const totalAcc = useRef({\n    tokens: [],\n    total: 0,\n  });\n\n  const totalProfitAcc = useRef({\n    tokens: [],\n    total: 0,\n  });\n\n  const totalInvestedAcc = useRef({\n    tokens: [],\n    total: 0,\n  });\n\n  const totalAccumulator = useCallback((token, tokenTotal) => {\n    const current = totalAcc.current;\n    if (!current.tokens.includes(token)) {\n      const newTotal = current.total + tokenTotal;\n      const newTokens = [...current.tokens, token];\n      totalAcc.current = {\n        tokens: newTokens,\n        total: newTotal,\n      };\n      setTotal(newTotal);\n      setGlobalTotal(newTotal);\n    }\n  }, []);\n\n  const totalProfitAccumulator = useCallback((token, tokenTotal) => {\n    const current = totalProfitAcc.current;\n    if (!current.tokens.includes(token)) {\n      const newTotal = current.total + tokenTotal;\n      const newTokens = [...current.tokens, token];\n      totalProfitAcc.current = {\n        tokens: newTokens,\n        total: newTotal,\n      };\n      setTotalProfit(newTotal);\n    }\n  }, []);\n\n  const totalInvestedAccumulator = useCallback((token, tokenTotal) => {\n    const current = totalInvestedAcc.current;\n    if (!current.tokens.includes(token)) {\n      const newTotal = current.total + tokenTotal;\n      const newTokens = [...current.tokens, token];\n      totalInvestedAcc.current = {\n        tokens: newTokens,\n        total: newTotal,\n      };\n      setTotalInvested(newTotal);\n    }\n  }, []);\n\n  const profitPercent = totalInvested == 0 ? 0 : (totalProfit / total) * 100;\n\n  return (\n    <table class=\"table table-account\">\n      <thead>\n        <tr>\n          <th rowSpan={2}>Product</th>\n          <th rowSpan={2}>Token</th>\n          <th rowSpan={2}>Amount</th>\n          <th rowSpan={2}>Invested amount, USDT</th>\n          <th rowSpan={2}>AVG purchase price</th>\n          <th className=\"_large\" colSpan={5}>\n            Current value\n          </th>\n        </tr>\n        <tr>\n          <th>Token price</th>\n          <th>Portfolio value, USDT</th>\n          <th>Profit/Loss, USDT</th>\n          <th>Profit/Loss, %</th>\n          <th>APY %</th>\n        </tr>\n      </thead>\n      <tbody>\n        {tokens.map((token) => (\n          <TokenTableInfoRow\n            key={token.address}\n            token={token}\n            walletAddress={walletAddress}\n            web3={web3}\n            profitAccumulator={profitAccumulator}\n            totalAccumulator={totalAccumulator}\n            totalProfitAccumulator={totalProfitAccumulator}\n            totalInvestedAccumulator={totalInvestedAccumulator}\n          />\n        ))}\n      </tbody>\n      <tfoot>\n        <tr>\n          <td>TOTAL</td>\n          <td />\n          <td />\n          <td>$ {totalInvested.toFixed(2)}</td>\n          <td></td>\n          <td></td>\n          <td>$ {total.toFixed(2)}</td>\n          <td>$ {totalProfit.toFixed(2)}</td>\n          <td>{profitPercent.toFixed(2)}%</td>\n          <td></td>\n        </tr>\n      </tfoot>\n    </table>\n  );\n};\n\nexport default TokenTableInfo;\n","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenAmount.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/PortfolioPartsGraph.js",["173"],"import React, { useEffect, useState } from \"react\";\nimport { round } from \"./round\";\nimport { colorByIndex } from \"./colors\";\nimport Highcharts from \"highcharts/highcharts\";\nimport highchartsMore from \"highcharts/highcharts-more\";\nimport solidGauge from \"highcharts/modules/solid-gauge\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst ABI = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_registryAddress\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract ERC20\",\n        name: \"_fromToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract ERC20\",\n        name: \"_destToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getExpectedReturn\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getNonEmptyTokenBalances\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"token\",\n            type: \"address\",\n          },\n          {\n            internalType: \"int256\",\n            name: \"amount\",\n            type: \"int256\",\n          },\n        ],\n        internalType: \"struct AdaptedBalance[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getPrice\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"_amount\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getTokenPrice\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst ABI_TICKER = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [{ name: \"\", type: \"string\" }],\n    type: \"function\",\n  },\n];\n\nconst PortfolioPartsGraph = (props) => {\n  const { tokenAddress, web3 } = props;\n\n  const [loading, setLoading] = useState(true);\n  const [partList, setPartList] = useState();\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    const fn = async () => {\n      setLoading(true);\n      if (!web3) {\n        return;\n      }\n      const contract = new web3.eth.Contract(\n        ABI,\n        \"0xB3c57c8C6dc04785E16292D8b91ef827a88A9548\"\n      );\n      const balances = await contract.methods\n        .getNonEmptyTokenBalances(tokenAddress)\n        .call();\n      const priceParts = {};\n      const names = {};\n      for (let balance of balances) {\n        const token = balance[0];\n        const amount = balance[1];\n        console.log(`Token: ${token}`);\n        if (token === \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\") {\n          names[token] = \"Ethereum\";\n        } else {\n          try {\n            const contractTicker = new web3.eth.Contract(ABI_TICKER, token);\n            const name = await contractTicker.methods.name().call();\n            names[token] = name;\n          } catch (e) {\n            console.log(`Error getting name for token: ${token}`);\n            names[token] = token;\n          }\n        }\n        const price = await contract.methods\n          .getTokenPrice(amount, token)\n          .call();\n        if (!priceParts[token]) {\n          priceParts[token] = 0;\n        }\n        priceParts[token] += Number.parseFloat(price);\n      }\n      const priceTotal = Object.values(priceParts).reduce((a, b) => a + b, 0);\n      const pricePercent = [];\n      for (const token of Object.keys(priceParts)) {\n        const pricePercentValue = (priceParts[token] / priceTotal) * 100;\n        if (pricePercentValue > 0.1) {\n          pricePercent.push({\n            token,\n            pricePercentValue,\n            name: names[token],\n          });\n        }\n      }\n      pricePercent.sort((a, b) => b.pricePercentValue - a.pricePercentValue);\n\n      if (!isCancelled) {\n        setLoading(false);\n        setPartList(pricePercent);\n      }\n    };\n    fn();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [tokenAddress, web3]);\n\n  if (!partList || loading) {\n    return <p>Loading...</p>;\n  }\n\n  const maxRadius = 112;\n  const minRadius = 38;\n  const radiusStep = (maxRadius - minRadius) / partList.length;\n\n  const series = partList.map((item, index) => {\n    const name = item.name;\n    const y = round(item.pricePercentValue, 3);\n    const radius = maxRadius - radiusStep * index;\n    const innerRadius = radius - radiusStep + (index + 1);\n    const color = colorByIndex(index);\n    return {\n      name,\n      data: [\n        {\n          color,\n          radius: radius + \"%\",\n          innerRadius: innerRadius + \"%\",\n          y,\n        },\n      ],\n    };\n  });\n\n  const paneBackgrounds = series.map((item) => {\n    const { radius, innerRadius, color } = item.data[0];\n    const backgroundColor = \"white\";\n    return {\n      backgroundColor,\n      innerRadius,\n      outerRadius: radius,\n      borderWidth: 0,\n    };\n  });\n\n  const config = {\n    exporting: {\n      enabled: false,\n    },\n    chart: {\n      type: \"solidgauge\",\n      height: \"110%\",\n    },\n\n    title: {\n      text: null,\n    },\n\n    tooltip: {\n      borderWidth: 0,\n      backgroundColor: \"none\",\n      shadow: false,\n      style: {\n        fontSize: \"16px\",\n        textAlign: \"center\",\n      },\n      valueSuffix: \"%\",\n      useHTML: true,\n      pointFormatter() {\n        const point = this,\n          { name } = this.series,\n          value = point.y;\n        return `\n                    <div style=\"text-align: center\">\n                        <span>${name}</span>\n                        <br>\n                        <span style=\"font-size:2em; color: ${point.color};\">${value}%</span>\n                    </div>\n                `;\n      },\n      positioner: function (labelWidth) {\n        return {\n          x: (this.chart.chartWidth - labelWidth) / 2,\n          y: this.chart.plotHeight / 2 - 25,\n        };\n      },\n    },\n\n    pane: {\n      startAngle: 0,\n      endAngle: 360,\n      background: paneBackgrounds,\n    },\n\n    yAxis: {\n      min: 0,\n      max: 100,\n      lineWidth: 0,\n      tickPositions: [],\n    },\n\n    plotOptions: {\n      solidgauge: {\n        dataLabels: {\n          enabled: false,\n        },\n        //linecap: 'round',\n        stickyTracking: false,\n        //rounded: true\n      },\n    },\n    series,\n  };\n\n  highchartsMore(Highcharts);\n  solidGauge(Highcharts);\n\n  return (\n    <>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={config}\n        immutable={true}\n      />\n    </>\n  );\n};\n\nexport default PortfolioPartsGraph;\n","/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTableRowDropdown.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/AccountPortfolioProvider.js",["174","175","176"],"import React, { useState, useEffect } from \"react\";\nimport { apiNameByAddress } from \"../data/tokens\";\nimport { mergeByDayID } from \"./merger\";\nimport { round } from \"./round\";\nimport { useQuery, gql } from \"@apollo/react-hooks\";\nimport { computeDailyPrices } from \"./computeCost\";\n\nconst GET_ACCOUNT_GRAPH = gql`\n  query GetTokenAccountGraphAccountPortfolioProfit(\n    $wallet: String\n    $tokens: [String]\n  ) {\n    historicalBalances(where: { wallet: $wallet, token_in: $tokens }) {\n      id\n      date\n      dayId\n      hourId\n      amount\n      token\n      wallet\n    }\n  }\n`;\n\nconst GET_LAST_PRICE = gql`\n  query GetAccountPortfolioProfit($tokens: [String]) {\n    dayHistoricalDatas(\n      orderBy: dayId\n      orderDirection: desc\n      where: { token_in: $tokens }\n    ) {\n      id\n      date\n      dayId\n      price\n      token\n      totalPrice\n    }\n  }\n`;\n\nconst GET_PURCHASES = gql`\n  query GetAccountPortfolioPurchases($wallet: String, $tokens: [String]) {\n    balanceEvents(\n      where: {\n        counterparty: \"0x0000000000000000000000000000000000000000\"\n        kind: 1\n        wallet: $wallet\n        token_in: $tokens\n      }\n    ) {\n      id\n      kind\n      dayId\n      amount\n      token\n      counterparty\n      wallet\n    }\n  }\n`;\n\nconst AccountPortfolioProvider = (props) => {\n  const { tokens, wallet, childrenLoading, children } = props;\n\n  const { loading: loading1, error: e1, data: balances } = useQuery(\n    GET_ACCOUNT_GRAPH,\n    {\n      variables: {\n        tokens,\n        wallet,\n      },\n      skip: !wallet,\n    }\n  );\n\n  const { loading: loading2, error: e2, data: prices } = useQuery(\n    GET_LAST_PRICE,\n    {\n      variables: {\n        tokens,\n      },\n      skip: !wallet,\n    }\n  );\n\n  const { loading: loading3, error: e3, data: purchases } = useQuery(\n    GET_PURCHASES,\n    {\n      variables: {\n        tokens,\n        wallet,\n      },\n      skip: !wallet,\n    }\n  );\n\n  const [historicalData, setHistoricalData] = useState();\n\n  useEffect(() => {\n    const fn = async () => {\n      const all = [];\n      for (const token of tokens) {\n        const apiName = apiNameByAddress(token);\n        if (apiName) {\n          const response = await fetch(\n            `/storage/charts/${apiName}/common.json`\n          ).then((res) => res.json());\n          const adjusted = response.map((data) => {\n            return {\n              date: Math.floor(data[0] / 1000),\n              dayId: Math.floor(data[0] / 1000 / 86400),\n              price: round(data[1] * 10 ** 6, 3),\n              token: token.toLowerCase(),\n              totalPrice: round(\n                Number.parseFloat(data[3]) * 10 ** 6 * 10 ** 18,\n                3\n              ),\n            };\n          });\n\n          adjusted.forEach((a) => {\n            all.push(a);\n          });\n        }\n        setHistoricalData(all);\n      }\n    };\n    fn();\n  }, [tokens]);\n\n  if (\n    loading1 ||\n    loading2 ||\n    loading3 ||\n    !balances ||\n    !prices ||\n    !historicalData ||\n    !purchases\n  ) {\n    return <>{childrenLoading()}</>;\n  }\n\n  const fullData = mergeByDayID(prices.dayHistoricalDatas, historicalData);\n  const computedData = computeDailyPrices(balances, fullData).reverse();\n\n  // index computed data\n  //\n  const dataIndex = {};\n  fullData.forEach((data) => {\n    dataIndex[`${data.dayId}_${data.token.toLowerCase()}`] = data;\n  });\n  // add purchase price\n  //\n  const purchasesWithPrice = purchases.balanceEvents.map((p) => ({\n    ...p,\n    price: dataIndex[`${p.dayId}_${p.token.toLowerCase()}`],\n  }));\n\n  // Compute APY\n  //\n  const last = prices.dayHistoricalDatas[0];\n  const first = prices.dayHistoricalDatas[prices.dayHistoricalDatas.length - 1];\n  const lastPrice2 = last.price;\n  let firstPrice = first.price;\n  const daysBetween = last.dayId - first.dayId;\n  const apy = (((lastPrice2 / firstPrice - 1) * 100) / daysBetween) * 365;\n  const lastPrice = fullData[0].price;\n  return (\n    <>\n      {children({\n        fullData,\n        computedData,\n        purchasesWithPrice,\n        lastPrice,\n        apy,\n      })}\n    </>\n  );\n};\n\nexport default AccountPortfolioProvider;\n","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/computeCost.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/reportWebVitals.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/SidebarActivation.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/TokenRequest.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTable.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/TokenDashboard.js",["177","178","179"],"/Users/vy/PhpstormProjects/berezka-web/src/components/TokenRequestStandalone.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTableRow.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenPrice.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/PortfolioParts.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/Application.js",["180"],"/Users/vy/PhpstormProjects/berezka-web/src/components/Index.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/CookiePolicy.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/APY.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/ERC20Provider.js",["181"],{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"182","replacedBy":"186"},{"ruleId":"184","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":93,"column":6,"nodeType":"190","endLine":93,"endColumn":20,"suggestions":"191"},{"ruleId":"182","replacedBy":"192"},{"ruleId":"184","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":25,"column":15,"nodeType":"196","endLine":25,"endColumn":49},{"ruleId":"197","severity":1,"message":"198","line":17,"column":13,"nodeType":"196","endLine":17,"endColumn":80},{"ruleId":"197","severity":1,"message":"198","line":20,"column":13,"nodeType":"196","endLine":20,"endColumn":80},{"ruleId":"197","severity":1,"message":"198","line":23,"column":13,"nodeType":"196","endLine":23,"endColumn":80},{"ruleId":"197","severity":1,"message":"198","line":26,"column":13,"nodeType":"196","endLine":26,"endColumn":80},{"ruleId":"197","severity":1,"message":"198","line":29,"column":13,"nodeType":"196","endLine":29,"endColumn":80},{"ruleId":"197","severity":1,"message":"198","line":32,"column":13,"nodeType":"196","endLine":32,"endColumn":80},{"ruleId":"197","severity":1,"message":"198","line":35,"column":13,"nodeType":"196","endLine":35,"endColumn":80},{"ruleId":"197","severity":1,"message":"198","line":38,"column":13,"nodeType":"196","endLine":38,"endColumn":80},{"ruleId":"197","severity":1,"message":"198","line":41,"column":13,"nodeType":"196","endLine":41,"endColumn":80},{"ruleId":"197","severity":1,"message":"198","line":44,"column":13,"nodeType":"196","endLine":44,"endColumn":81},{"ruleId":"197","severity":1,"message":"198","line":47,"column":13,"nodeType":"196","endLine":47,"endColumn":81},{"ruleId":"197","severity":1,"message":"198","line":50,"column":13,"nodeType":"196","endLine":50,"endColumn":81},{"ruleId":"188","severity":1,"message":"199","line":113,"column":6,"nodeType":"190","endLine":113,"endColumn":31,"suggestions":"200"},{"ruleId":"188","severity":1,"message":"201","line":44,"column":6,"nodeType":"190","endLine":44,"endColumn":8,"suggestions":"202"},{"ruleId":"203","severity":1,"message":"204","line":72,"column":39,"nodeType":"205","messageId":"206","endLine":72,"endColumn":41},{"ruleId":"207","severity":1,"message":"208","line":237,"column":34,"nodeType":"209","messageId":"210","endLine":237,"endColumn":39},{"ruleId":"207","severity":1,"message":"211","line":66,"column":37,"nodeType":"209","messageId":"210","endLine":66,"endColumn":39},{"ruleId":"207","severity":1,"message":"212","line":77,"column":37,"nodeType":"209","messageId":"210","endLine":77,"endColumn":39},{"ruleId":"207","severity":1,"message":"213","line":87,"column":37,"nodeType":"209","messageId":"210","endLine":87,"endColumn":39},{"ruleId":"214","severity":1,"message":"215","line":69,"column":17,"nodeType":"196","endLine":69,"endColumn":59},{"ruleId":"214","severity":1,"message":"215","line":87,"column":17,"nodeType":"196","endLine":87,"endColumn":59},{"ruleId":"214","severity":1,"message":"215","line":113,"column":17,"nodeType":"196","endLine":113,"endColumn":59},{"ruleId":"188","severity":1,"message":"216","line":20,"column":23,"nodeType":"209","endLine":20,"endColumn":34},{"ruleId":"188","severity":1,"message":"217","line":48,"column":6,"nodeType":"190","endLine":48,"endColumn":35,"suggestions":"218"},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],["219"],["220"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'precision'. Either include it or remove the dependency array.","ArrayExpression",["221"],["219"],["220"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","Invalid alt value for img. Use alt=\"\" for presentational images.","React Hook useEffect has missing dependencies: 'doSetRequestedAmount' and 'requestedAmount'. Either include them or remove the dependency array.",["222"],"React Hook useCallback has a missing dependency: 'setGlobalTotal'. Either include it or remove the dependency array.",["223"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'color' is assigned a value but never used.","Identifier","unusedVar","'e1' is assigned a value but never used.","'e2' is assigned a value but never used.","'e3' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has a missing dependency: 'web3.eth.Contract'. Either include it or remove the dependency array.",["224"],"no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},"Update the dependencies array to be: [precision, tokenAddress]",{"range":"233","text":"234"},"Update the dependencies array to be: [doSetRequestedAmount, loading, requestedAmount, requestedToken]",{"range":"235","text":"236"},"Update the dependencies array to be: [setGlobalTotal]",{"range":"237","text":"238"},"Update the dependencies array to be: [walletAddress, tokenAddress, web3.eth.Contract]",{"range":"239","text":"240"},[2604,2618],"[precision, tokenAddress]",[2519,2544],"[doSetRequestedAmount, loading, requestedAmount, requestedToken]",[1026,1028],"[setGlobalTotal]",[1164,1193],"[walletAddress, tokenAddress, web3.eth.Contract]"]