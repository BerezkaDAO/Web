[{"/Users/vy/PhpstormProjects/berezka-web/src/App.js":"1","/Users/vy/PhpstormProjects/berezka-web/src/components/SidebarActivation.js":"2","/Users/vy/PhpstormProjects/berezka-web/src/components/Dashboard.js":"3","/Users/vy/PhpstormProjects/berezka-web/src/components/TokenRequest.js":"4","/Users/vy/PhpstormProjects/berezka-web/src/components/PrivacyPolicy.js":"5","/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTable.js":"6","/Users/vy/PhpstormProjects/berezka-web/src/components/HowItWorks.js":"7","/Users/vy/PhpstormProjects/berezka-web/src/components/TokenRequestController.js":"8","/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTableRow.js":"9","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenAmount.js":"10","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/PortfolioPartsGraph.js":"11","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/merger.js":"12","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/AccountPortfolioProvider.js":"13","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/computeCost.js":"14","/Users/vy/PhpstormProjects/berezka-web/src/components/HeaderBalance.js":"15","/Users/vy/PhpstormProjects/berezka-web/src/components/Audit.js":"16","/Users/vy/PhpstormProjects/berezka-web/src/components/TokenDashboard.js":"17","/Users/vy/PhpstormProjects/berezka-web/src/components/TokenRequestStandalone.js":"18","/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTableHeader.js":"19","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenPriceGraph.js":"20","/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTableRowDropdown.js":"21","/Users/vy/PhpstormProjects/berezka-web/src/components/Header.js":"22","/Users/vy/PhpstormProjects/berezka-web/src/reportWebVitals.js":"23","/Users/vy/PhpstormProjects/berezka-web/src/components/Account.js":"24","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TotalPrice.js":"25","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/round.js":"26","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/PortfolioParts.js":"27","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/ERC20Provider.js":"28","/Users/vy/PhpstormProjects/berezka-web/src/components/Index.js":"29","/Users/vy/PhpstormProjects/berezka-web/src/components/data/tokens.js":"30","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenAmountGraph.js":"31","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenTableInfoRow.js":"32"},{"size":119,"mtime":1608567609000,"results":"33","hashOfConfig":"34"},{"size":280,"mtime":1608567609000,"results":"35","hashOfConfig":"34"},{"size":1344,"mtime":1608916279773,"results":"36","hashOfConfig":"34"},{"size":1312,"mtime":1608567609000,"results":"37","hashOfConfig":"34"},{"size":16247,"mtime":1608567609000,"results":"38","hashOfConfig":"34"},{"size":596,"mtime":1608567609000,"results":"39","hashOfConfig":"34"},{"size":2578,"mtime":1608567609000,"results":"40","hashOfConfig":"34"},{"size":5705,"mtime":1608567609000,"results":"41","hashOfConfig":"34"},{"size":1307,"mtime":1608916279772,"results":"42","hashOfConfig":"34"},{"size":770,"mtime":1608567609000,"results":"43","hashOfConfig":"34"},{"size":7304,"mtime":1608567609000,"results":"44","hashOfConfig":"34"},{"size":1715,"mtime":1608567609000,"results":"45","hashOfConfig":"34"},{"size":4112,"mtime":1608567609000,"results":"46","hashOfConfig":"34"},{"size":1467,"mtime":1608567609000,"results":"47","hashOfConfig":"34"},{"size":273,"mtime":1608567609000,"results":"48","hashOfConfig":"34"},{"size":290,"mtime":1608567609000,"results":"49","hashOfConfig":"34"},{"size":4553,"mtime":1608916279775,"results":"50","hashOfConfig":"34"},{"size":2790,"mtime":1608567609000,"results":"51","hashOfConfig":"34"},{"size":470,"mtime":1608567609000,"results":"52","hashOfConfig":"34"},{"size":4481,"mtime":1608567609000,"results":"53","hashOfConfig":"34"},{"size":1861,"mtime":1608567609000,"results":"54","hashOfConfig":"34"},{"size":1509,"mtime":1609078579727,"results":"55","hashOfConfig":"34"},{"size":364,"mtime":1608567609000,"results":"56","hashOfConfig":"34"},{"size":1563,"mtime":1608916279771,"results":"57","hashOfConfig":"34"},{"size":937,"mtime":1608916279776,"results":"58","hashOfConfig":"34"},{"size":127,"mtime":1608567609000,"results":"59","hashOfConfig":"34"},{"size":5073,"mtime":1608567609000,"results":"60","hashOfConfig":"34"},{"size":1330,"mtime":1608567609000,"results":"61","hashOfConfig":"34"},{"size":510,"mtime":1608567609000,"results":"62","hashOfConfig":"34"},{"size":2015,"mtime":1608567609000,"results":"63","hashOfConfig":"34"},{"size":3707,"mtime":1608567609000,"results":"64","hashOfConfig":"34"},{"size":4107,"mtime":1608567609000,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"b98226",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"73"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vy/PhpstormProjects/berezka-web/src/App.js",[],["138","139"],"/Users/vy/PhpstormProjects/berezka-web/src/components/SidebarActivation.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/Dashboard.js",[],["140","141"],"/Users/vy/PhpstormProjects/berezka-web/src/components/TokenRequest.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/PrivacyPolicy.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTable.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/HowItWorks.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/TokenRequestController.js",["142"],"/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTableRow.js",[],["143","144"],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenAmount.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/PortfolioPartsGraph.js",["145"],"import React, { useEffect, useState } from \"react\";\nimport { round } from \"./round\";\nimport { colorByIndex } from \"./colors\";\nimport Highcharts from \"highcharts/highcharts\";\nimport highchartsMore from \"highcharts/highcharts-more\";\nimport solidGauge from \"highcharts/modules/solid-gauge\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst ABI = [\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_registryAddress\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"contract ERC20\",\n        name: \"_fromToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"contract ERC20\",\n        name: \"_destToken\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"_amount\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getExpectedReturn\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getNonEmptyTokenBalances\",\n    outputs: [\n      {\n        components: [\n          {\n            internalType: \"address\",\n            name: \"token\",\n            type: \"address\",\n          },\n          {\n            internalType: \"int256\",\n            name: \"amount\",\n            type: \"int256\",\n          },\n        ],\n        internalType: \"struct AdaptedBalance[]\",\n        name: \"\",\n        type: \"tuple[]\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getPrice\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"int256\",\n        name: \"_amount\",\n        type: \"int256\",\n      },\n      {\n        internalType: \"address\",\n        name: \"_token\",\n        type: \"address\",\n      },\n    ],\n    name: \"getTokenPrice\",\n    outputs: [\n      {\n        internalType: \"int256\",\n        name: \"\",\n        type: \"int256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst ABI_TICKER = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [{ name: \"\", type: \"string\" }],\n    type: \"function\",\n  },\n];\n\nconst PortfolioPartsGraph = (props) => {\n  const { tokenAddress, web3 } = props;\n\n  const [loading, setLoading] = useState(true);\n  const [partList, setPartList] = useState();\n\n  useEffect(() => {\n    let isCancelled = false;\n\n    const fn = async () => {\n      setLoading(true);\n      if (!web3) {\n        return;\n      }\n      const contract = new web3.eth.Contract(\n        ABI,\n        \"0xB3c57c8C6dc04785E16292D8b91ef827a88A9548\"\n      );\n      const balances = await contract.methods\n        .getNonEmptyTokenBalances(tokenAddress)\n        .call();\n      const priceParts = {};\n      const names = {};\n      for (let balance of balances) {\n        const token = balance[0];\n        const amount = balance[1];\n        console.log(`Token: ${token}`);\n        if (token === \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\") {\n          names[token] = \"Ethereum\";\n        } else {\n          try {\n            const contractTicker = new web3.eth.Contract(ABI_TICKER, token);\n            const name = await contractTicker.methods.name().call();\n            names[token] = name;\n          } catch (e) {\n            console.log(`Error getting name for token: ${token}`);\n            names[token] = token;\n          }\n        }\n        const price = await contract.methods\n          .getTokenPrice(amount, token)\n          .call();\n        if (!priceParts[token]) {\n          priceParts[token] = 0;\n        }\n        priceParts[token] += Number.parseFloat(price);\n      }\n      const priceTotal = Object.values(priceParts).reduce((a, b) => a + b, 0);\n      const pricePercent = [];\n      for (const token of Object.keys(priceParts)) {\n        const pricePercentValue = (priceParts[token] / priceTotal) * 100;\n        if (pricePercentValue > 0.1) {\n          pricePercent.push({\n            token,\n            pricePercentValue,\n            name: names[token],\n          });\n        }\n      }\n      pricePercent.sort((a, b) => b.pricePercentValue - a.pricePercentValue);\n\n      if (!isCancelled) {\n        setLoading(false);\n        setPartList(pricePercent);\n      }\n    };\n    fn();\n\n    return () => {\n      isCancelled = true;\n    };\n  }, [tokenAddress, web3]);\n\n  if (!partList || loading) {\n    return <p>Loading...</p>;\n  }\n\n  const maxRadius = 112;\n  const minRadius = 38;\n  const radiusStep = (maxRadius - minRadius) / partList.length;\n\n  const series = partList.map((item, index) => {\n    const name = item.name;\n    const y = round(item.pricePercentValue, 3);\n    const radius = maxRadius - radiusStep * index;\n    const innerRadius = radius - radiusStep + (index + 1);\n    const color = colorByIndex(index);\n    return {\n      name,\n      data: [\n        {\n          color,\n          radius: radius + \"%\",\n          innerRadius: innerRadius + \"%\",\n          y,\n        },\n      ],\n    };\n  });\n\n  const paneBackgrounds = series.map((item) => {\n    const { radius, innerRadius, color } = item.data[0];\n    const backgroundColor = \"white\";\n    return {\n      backgroundColor,\n      innerRadius,\n      outerRadius: radius,\n      borderWidth: 0,\n    };\n  });\n\n  const config = {\n    exporting: {\n      enabled: false,\n    },\n    chart: {\n      type: \"solidgauge\",\n      height: \"110%\",\n    },\n\n    title: {\n      text: null,\n    },\n\n    tooltip: {\n      borderWidth: 0,\n      backgroundColor: \"none\",\n      shadow: false,\n      style: {\n        fontSize: \"16px\",\n        textAlign: \"center\",\n      },\n      valueSuffix: \"%\",\n      useHTML: true,\n      pointFormatter() {\n        const point = this,\n          { name } = this.series,\n          value = point.y;\n        return `\n                    <div style=\"text-align: center\">\n                        <span>${name}</span>\n                        <br>\n                        <span style=\"font-size:2em; color: ${point.color};\">${value}%</span>\n                    </div>\n                `;\n      },\n      positioner: function (labelWidth) {\n        return {\n          x: (this.chart.chartWidth - labelWidth) / 2,\n          y: this.chart.plotHeight / 2 - 25,\n        };\n      },\n    },\n\n    pane: {\n      startAngle: 0,\n      endAngle: 360,\n      background: paneBackgrounds,\n    },\n\n    yAxis: {\n      min: 0,\n      max: 100,\n      lineWidth: 0,\n      tickPositions: [],\n    },\n\n    plotOptions: {\n      solidgauge: {\n        dataLabels: {\n          enabled: false,\n        },\n        //linecap: 'round',\n        stickyTracking: false,\n        //rounded: true\n      },\n    },\n    series,\n  };\n\n  highchartsMore(Highcharts);\n  solidGauge(Highcharts);\n\n  return (\n    <>\n      <HighchartsReact\n        highcharts={Highcharts}\n        options={config}\n        immutable={true}\n      />\n    </>\n  );\n};\n\nexport default PortfolioPartsGraph;\n","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/merger.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/AccountPortfolioProvider.js",["146","147","148"],"import React, { useState, useEffect } from \"react\";\nimport { apiNameByAddress } from \"../data/tokens\";\nimport { mergeByDayID } from \"./merger\";\nimport { round } from \"./round\";\nimport { useQuery, gql } from \"@apollo/react-hooks\";\nimport { computeDailyPrices } from \"./computeCost\";\n\nconst GET_ACCOUNT_GRAPH = gql`\n  query GetTokenAccountGraphAccountPortfolioProfit(\n    $wallet: String\n    $tokens: [String]\n  ) {\n    historicalBalances(where: { wallet: $wallet, token_in: $tokens }) {\n      id\n      date\n      dayId\n      hourId\n      amount\n      token\n      wallet\n    }\n  }\n`;\n\nconst GET_LAST_PRICE = gql`\n  query GetAccountPortfolioProfit($tokens: [String]) {\n    dayHistoricalDatas(\n      orderBy: dayId\n      orderDirection: desc\n      where: { token_in: $tokens }\n    ) {\n      id\n      date\n      dayId\n      price\n      token\n      totalPrice\n    }\n  }\n`;\n\nconst GET_PURCHASES = gql`\n  query GetAccountPortfolioPurchases($wallet: String, $tokens: [String]) {\n    balanceEvents(\n      where: {\n        counterparty: \"0x0000000000000000000000000000000000000000\"\n        kind: 1\n        wallet: $wallet\n        token_in: $tokens\n      }\n    ) {\n      id\n      kind\n      dayId\n      amount\n      token\n      counterparty\n      wallet\n    }\n  }\n`;\n\nconst AccountPortfolioProvider = (props) => {\n  const { tokens, wallet, childrenLoading, children } = props;\n\n  const { loading: loading1, error: e1, data: balances } = useQuery(\n    GET_ACCOUNT_GRAPH,\n    {\n      variables: {\n        tokens,\n        wallet,\n      },\n      skip: !wallet,\n    }\n  );\n\n  const { loading: loading2, error: e2, data: prices } = useQuery(\n    GET_LAST_PRICE,\n    {\n      variables: {\n        tokens,\n      },\n      skip: !wallet,\n    }\n  );\n\n  const { loading: loading3, error: e3, data: purchases } = useQuery(\n    GET_PURCHASES,\n    {\n      variables: {\n        tokens,\n        wallet,\n      },\n      skip: !wallet,\n    }\n  );\n\n  const [historicalData, setHistoricalData] = useState();\n\n  useEffect(() => {\n    const fn = async () => {\n      const all = [];\n      for (const token of tokens) {\n        const apiName = apiNameByAddress(token);\n        if (apiName) {\n          const response = await fetch(\n            `/storage/charts/${apiName}/common.json`\n          ).then((res) => res.json());\n          const adjusted = response.map((data) => {\n            return {\n              date: Math.floor(data[0] / 1000),\n              dayId: Math.floor(data[0] / 1000 / 86400),\n              price: round(data[1] * 10 ** 6, 3),\n              token: token.toLowerCase(),\n              totalPrice: round(\n                Number.parseFloat(data[3]) * 10 ** 6 * 10 ** 18,\n                3\n              ),\n            };\n          });\n\n          adjusted.forEach((a) => {\n            all.push(a);\n          });\n        }\n        setHistoricalData(all);\n      }\n    };\n    fn();\n  }, [tokens]);\n\n  if (\n    loading1 ||\n    loading2 ||\n    loading3 ||\n    !balances ||\n    !prices ||\n    !historicalData ||\n    !purchases\n  ) {\n    return <>{childrenLoading()}</>;\n  }\n\n  const fullData = mergeByDayID(prices.dayHistoricalDatas, historicalData);\n  const computedData = computeDailyPrices(balances, fullData).reverse();\n\n  // index computed data\n  //\n  const dataIndex = {};\n  fullData.forEach((data) => {\n    dataIndex[`${data.dayId}_${data.token.toLowerCase()}`] = data;\n  });\n  // add purchase price\n  //\n  const purchasesWithPrice = purchases.balanceEvents.map((p) => ({\n    ...p,\n    price: dataIndex[`${p.dayId}_${p.token.toLowerCase()}`],\n  }));\n\n  // Compute APY\n  //\n  const last = prices.dayHistoricalDatas[0];\n  const first = prices.dayHistoricalDatas[prices.dayHistoricalDatas.length - 1];\n  const lastPrice2 = last.price;\n  let firstPrice = first.price;\n  const daysBetween = last.dayId - first.dayId;\n  const apy = (((lastPrice2 / firstPrice - 1) * 100) / daysBetween) * 365;\n  const lastPrice = fullData[0].price;\n  return (\n    <>\n      {children({\n        fullData,\n        computedData,\n        purchasesWithPrice,\n        lastPrice,\n        apy,\n      })}\n    </>\n  );\n};\n\nexport default AccountPortfolioProvider;\n","/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/computeCost.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/HeaderBalance.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/Audit.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/TokenDashboard.js",["149","150","151"],"import React from \"react\";\nimport { tokenInfo } from \"./data/tokens\";\n\nimport TokenAmount from \"./widgets/TokenAmount\";\nimport TokenPrice from \"./widgets/TokenPrice\";\nimport APY from \"./widgets/APY\";\nimport TokenPriceGraph from \"./widgets/TokenPriceGraph\";\nimport TokenAmountGraph from \"./widgets/TokenAmountGraph\";\nimport PortfolioPartsGraph from \"./widgets/PortfolioPartsGraph\";\nimport PortfolioParts from \"./widgets/PortfolioParts\";\n\nfunction TokenDashboard(props) {\n  const token = props.match.params.id;\n  const { web3Global } = props;\n  const tokenAddress = tokenInfo[token].address;\n\n  return (\n    <div className=\"info-list grid\">\n      <div className=\"info-main grid-col-4 grid-md-12\">\n        <div className=\"info-main__header\">\n          <div className=\"info-main__title\">\n            {tokenInfo[token].tableName} token price, USD\n          </div>\n          <div className=\"info-main__icon\">\n            <i className=\"icon icon-chart\" />\n          </div>\n        </div>\n        <div className=\"info-main__value\">\n          <TokenAmount tokenAddress={tokenAddress} />\n        </div>\n      </div>\n      <div className=\"info-main grid-col-4 grid-md-12\">\n        <div className=\"info-main__header\">\n          <div className=\"info-main__title\">Portfolio, USD</div>\n          <div className=\"info-main__icon\">\n            <i className=\"icon icon-eye\" />\n          </div>\n        </div>\n        <div className=\"info-main__value\">\n          <TokenPrice\n            tokenAddress={tokenAddress}\n            dollarSeparator=\" \"\n            separator=\" \"\n          />\n        </div>\n      </div>\n      <div className=\"info-main grid-col-4 grid-md-12\">\n        <div className=\"info-main__header\">\n          <div className=\"info-main__title\">APY, %</div>\n          <div className=\"info-main__icon\">\n            <i className=\"icon icon-arrows\" />\n          </div>\n        </div>\n        <div className=\"info-main__value\">\n          <APY tokenAddress={tokenAddress} decimals={2} />\n        </div>\n      </div>\n      <div className=\"info-general grid-col-4 grid-lg-6 grid-md-12\">\n        <div className=\"info-general__header\">\n          <div className=\"info-general__title\">Portfolio</div>\n          <div className=\"info-general__menu\">\n            <div className=\"dropdown\">\n              <a className=\"dropdown__button\" href>\n                <i className=\"icon icon-menu2\" />\n              </a>\n              <div className=\"dropdown__menu\">\n                <a className=\"dropdown__menu-item\" href />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"info-general__content\">\n          <PortfolioPartsGraph tokenAddress={tokenAddress} web3={web3Global} />\n        </div>\n      </div>\n      <div className=\"info-general _wide grid-col-8 grid-lg-6 grid-md-12\">\n        <div className=\"info-general__header\">\n          <div className=\"info-general__title\">Token Price, USD</div>\n          <div className=\"info-general__menu\">\n            <div className=\"dropdown\">\n              <a className=\"dropdown__button\" href>\n                <i className=\"icon icon-menu2\" />\n              </a>\n              <div className=\"dropdown__menu\">\n                <a className=\"dropdown__menu-item\" href />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"info-general__content\">\n          <TokenPriceGraph tokenAddress={tokenAddress} />\n        </div>\n      </div>\n      <div className=\"info-general grid-col-4 grid-lg-6 grid-md-12\">\n        <div className=\"info-general__header\">\n          <div className=\"info-general__title\">Liquidity pools</div>\n        </div>\n        <div className=\"info-general__content\">\n          <PortfolioParts tokenAddress={tokenAddress} web3={web3Global} />\n        </div>\n      </div>\n      <div className=\"info-general _wide grid-col-8 grid-lg-6 grid-md-12\">\n        <div className=\"info-general__header\">\n          <div className=\"info-general__title\">Portfolio Value, USD</div>\n          <div className=\"info-general__menu\">\n            <div className=\"dropdown\">\n              <a className=\"dropdown__button\" href>\n                <i className=\"icon icon-menu2\" />\n              </a>\n              <div className=\"dropdown__menu\">\n                <a className=\"dropdown__menu-item\" href />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"info-general__content\">\n          <TokenAmountGraph tokenAddress={tokenAddress} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TokenDashboard;\n","/Users/vy/PhpstormProjects/berezka-web/src/components/TokenRequestStandalone.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTableHeader.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenPriceGraph.js",["152"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { apiNameByAddress } from \"../data/tokens\";\nimport { mergeByDayID } from \"./merger\";\nimport { useQuery, gql } from \"@apollo/react-hooks\";\nimport { round } from \"./round\";\nimport Highcharts from \"highcharts/highstock\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst GET_LAST_PRICE = gql`\n  query Get($tokenAddress: String) {\n    dayHistoricalDatas(\n      orderBy: dayId\n      orderDirection: desc\n      where: { token: $tokenAddress }\n    ) {\n      id\n      date\n      dayId\n      price\n      token\n      totalPrice\n    }\n  }\n`;\n\nconst renderIncrease = (options) => {\n  const { event, chart, data } = options;\n  let filteredData = data;\n  if (event) {\n    const { max, min } = event;\n    filteredData = data.filter((point) => {\n      const [date] = point;\n      return date >= min && date <= max;\n    });\n  }\n\n  const len = filteredData.length - 1;\n  const rangeStart = filteredData[0][1];\n  const rangeEnd = filteredData[len][1];\n  const increaseFloat = (rangeEnd * 100) / rangeStart - 100;\n  const increaseRaw = increaseFloat.toFixed(2);\n  const increase = +increaseRaw === increaseFloat ? increaseFloat : increaseRaw;\n  const subtitle = `Increase: ${increase}%`;\n  const subtitleOptions = {\n    text: subtitle,\n  };\n  chart.setTitle(null, subtitleOptions);\n};\n\nconst TokenPriceGraph = (props) => {\n  const { tokenAddress } = props;\n\n  const { loading, error, data } = useQuery(GET_LAST_PRICE, {\n    variables: {\n      tokenAddress,\n    },\n  });\n\n  const [historicalData, setHistoricalData] = useState();\n\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const fn = async () => {\n      if (!tokenAddress) {\n        setHistoricalData(null);\n      } else {\n        const apiName = apiNameByAddress(tokenAddress);\n        if (!apiName) {\n          setHistoricalData([]);\n        } else {\n          const response = await fetch(\n            `/storage/charts/${apiNameByAddress(tokenAddress)}/common.json`\n          ).then((res) => res.json());\n          const adjusted = response.map((data) => {\n            return {\n              date: Math.floor(data[0] / 1000),\n              dayId: Math.floor(data[0] / 1000 / 86400),\n              price: \"\" + round(data[1] * 10 ** 6, 3),\n              token: tokenAddress.toLowerCase(),\n              totalPrice: round(\n                Number.parseFloat(data[3]) * 10 ** 6 * 10 ** 18,\n                3\n              ),\n            };\n          });\n          setHistoricalData(adjusted);\n        }\n      }\n    };\n    fn();\n  }, [tokenAddress]);\n\n  if (loading || !historicalData) {\n    return <>Loading...</>;\n  }\n\n  const merged = mergeByDayID(historicalData, data.dayHistoricalDatas);\n\n  const chartData = merged\n    .map((it) => {\n      return [\n        Number.parseInt(it.date) * 1000,\n        round(Number.parseFloat(it.price / 10 ** 6), 3),\n      ];\n    })\n    .reverse();\n\n  const titleOptions = {\n    // text: title\n    text: null,\n  };\n\n  const config = {\n    exporting: {\n      enabled: false,\n    },\n    navigator: {\n      enabled: false,\n    },\n    xAxis: {\n      events: {\n        setExtremes(event) {\n          renderIncrease({\n            event,\n            chart: chartRef.current.chart,\n            data: chartData,\n          });\n        },\n      },\n    },\n    title: titleOptions,\n    subtitle: {\n      text: \"\",\n    },\n    rangeSelector: {\n      buttons: [\n        {\n          type: \"hour\",\n          count: 1,\n          text: \"1h\",\n        },\n        {\n          type: \"day\",\n          count: 1,\n          text: \"1d\",\n        },\n        {\n          type: \"week\",\n          count: 1,\n          text: \"1w\",\n        },\n        {\n          type: \"month\",\n          count: 1,\n          text: \"1m\",\n        },\n        {\n          type: \"all\",\n          count: 1,\n          text: \"All\",\n        },\n      ],\n      selected: 4,\n      inputEnabled: true,\n    },\n    yAxis: {\n      title: {\n        text: \"Price, USD\",\n      },\n      opposite: false,\n    },\n\n    series: [\n      {\n        color: \"#623a6c\",\n        name: \"Token Price\",\n        data: chartData,\n      },\n    ],\n  };\n\n  setTimeout(() => {\n    renderIncrease({\n      chart: chartRef.current.chart,\n      data: chartData,\n    });\n  });\n\n  return (\n    <>\n      <HighchartsReact\n        ref={chartRef}\n        highcharts={Highcharts}\n        constructorType={\"stockChart\"}\n        options={config}\n        immutable={true}\n      />\n    </>\n  );\n};\n\nexport default TokenPriceGraph;\n","/Users/vy/PhpstormProjects/berezka-web/src/components/AssetTableRowDropdown.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/Header.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/reportWebVitals.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/Account.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TotalPrice.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/round.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/PortfolioParts.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/ERC20Provider.js",["153"],"import React, { useEffect, useState } from \"react\";\n\nconst ABI = [\n  // balanceOf\n  {\n    constant: true,\n    inputs: [{ name: \"_owner\", type: \"address\" }],\n    name: \"balanceOf\",\n    outputs: [{ name: \"balance\", type: \"uint256\" }],\n    type: \"function\",\n  },\n  // decimals\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [{ name: \"\", type: \"uint8\" }],\n    type: \"function\",\n  },\n];\n\nconst ERC20Provider = (props) => {\n  const {\n    walletAddress,\n    tokenAddress,\n    web3,\n    children,\n    childrenLoading,\n  } = props;\n\n  const [loading, setLoading] = useState(true);\n  const [cachedBalance, setCachedBalance] = useState();\n\n  useEffect(() => {\n    const fn = async () => {\n      if (!walletAddress) {\n        setCachedBalance(0);\n      } else {\n        const contract = new web3.eth.Contract(ABI, tokenAddress);\n        const balance = await contract.methods.balanceOf(walletAddress).call();\n        const decimals = await contract.methods.decimals().call();\n        const balanceFinal = balance ? balance / 10 ** decimals : balance;\n        setCachedBalance(balanceFinal);\n        setLoading(false);\n      }\n    };\n    fn();\n  }, [walletAddress, tokenAddress]);\n\n  if (loading) {\n    return <>{childrenLoading()}</>;\n  }\n  return <>{children(cachedBalance)}</>;\n};\n\nexport default ERC20Provider;\n","/Users/vy/PhpstormProjects/berezka-web/src/components/Index.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/data/tokens.js",[],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenAmountGraph.js",["154","155"],"/Users/vy/PhpstormProjects/berezka-web/src/components/widgets/TokenTableInfoRow.js",["156","157","158"],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"159","replacedBy":"163"},{"ruleId":"161","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":113,"column":6,"nodeType":"167","endLine":113,"endColumn":31,"suggestions":"168"},{"ruleId":"159","replacedBy":"169"},{"ruleId":"161","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":237,"column":34,"nodeType":"173","messageId":"174","endLine":237,"endColumn":39},{"ruleId":"171","severity":1,"message":"175","line":66,"column":37,"nodeType":"173","messageId":"174","endLine":66,"endColumn":39},{"ruleId":"171","severity":1,"message":"176","line":77,"column":37,"nodeType":"173","messageId":"174","endLine":77,"endColumn":39},{"ruleId":"171","severity":1,"message":"177","line":87,"column":37,"nodeType":"173","messageId":"174","endLine":87,"endColumn":39},{"ruleId":"178","severity":1,"message":"179","line":67,"column":17,"nodeType":"180","endLine":67,"endColumn":59},{"ruleId":"178","severity":1,"message":"179","line":85,"column":17,"nodeType":"180","endLine":85,"endColumn":59},{"ruleId":"178","severity":1,"message":"179","line":111,"column":17,"nodeType":"180","endLine":111,"endColumn":59},{"ruleId":"171","severity":1,"message":"181","line":53,"column":20,"nodeType":"173","messageId":"174","endLine":53,"endColumn":25},{"ruleId":"165","severity":1,"message":"182","line":48,"column":6,"nodeType":"167","endLine":48,"endColumn":35,"suggestions":"183"},{"ruleId":"171","severity":1,"message":"181","line":29,"column":20,"nodeType":"173","messageId":"174","endLine":29,"endColumn":25},{"ruleId":"171","severity":1,"message":"184","line":83,"column":9,"nodeType":"173","messageId":"174","endLine":83,"endColumn":15},{"ruleId":"185","severity":1,"message":"186","line":16,"column":24,"nodeType":"187","messageId":"188","endLine":16,"endColumn":26},{"ruleId":"185","severity":1,"message":"186","line":56,"column":33,"nodeType":"187","messageId":"188","endLine":56,"endColumn":35},{"ruleId":"165","severity":1,"message":"189","line":65,"column":6,"nodeType":"167","endLine":65,"endColumn":39,"suggestions":"190"},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],["191"],["192"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'doSetRequestedAmount' and 'requestedAmount'. Either include them or remove the dependency array.","ArrayExpression",["193"],["191"],["192"],"no-unused-vars","'color' is assigned a value but never used.","Identifier","unusedVar","'e1' is assigned a value but never used.","'e2' is assigned a value but never used.","'e3' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'web3.eth.Contract'. Either include it or remove the dependency array.",["194"],"'series' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'address', 'profitAccumulator', 'totalAccumulator', 'totalInvestedAccumulator', and 'totalProfitAccumulator'. Either include them or remove the dependency array.",["195"],"no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [doSetRequestedAmount, loading, requestedAmount, requestedToken]",{"range":"202","text":"203"},"Update the dependencies array to be: [walletAddress, tokenAddress, web3.eth.Contract]",{"range":"204","text":"205"},"Update the dependencies array to be: [profit, portfolioPrice, iAmount, profitAccumulator, address, totalAccumulator, totalProfitAccumulator, totalInvestedAccumulator]",{"range":"206","text":"207"},[2519,2544],"[doSetRequestedAmount, loading, requestedAmount, requestedToken]",[1164,1193],"[walletAddress, tokenAddress, web3.eth.Contract]",[1765,1798],"[profit, portfolioPrice, iAmount, profitAccumulator, address, totalAccumulator, totalProfitAccumulator, totalInvestedAccumulator]"]